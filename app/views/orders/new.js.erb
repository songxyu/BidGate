$(".content_area").html("<%= escape_javascript render(:partial => 'orders/new_2') %>");


  // use jquery datepicker for some date fields
  var dateCtrolsSel = "#order_deadline, .date-input";
  $(dateCtrolsSel).datepicker();
  $(dateCtrolsSel).datepicker('option', 'dateFormat', 'yy-m-dd');
  

// **** select button actions


// select collection
var selection = {
	category:"",
	bid:"",
	location:""
};

var isCate = false;
var isBid = false;
var isLocation = false;

var $cate_buttons = $(".category_select .select_btn");

$cate_buttons.click(function(){
	var isSelected = $(this).hasClass("selected");
	$cate_buttons.removeClass("selected");
	if(!isSelected){
		$(this).addClass("selected");
		isCate = true;
		selection.category = $(this).attr("data-name");
//		alert(selection.category + ", " + selection.bid + ", " + selection.location);
	} else {
		isCate = false;
		selection.category = "";
	}
	checkSelectStatus();
});


var $bid_buttons = $(".bid_select .select_btn");

$bid_buttons.click(function(){
	var isSelected = $(this).hasClass("selected");
	$bid_buttons.removeClass("selected");
	if(!isSelected){
		$(this).addClass("selected");
		isBid = true;
		selection.bid = $(this).attr("data-name");
	} else {
		isBid = false;
		selection.bid = "";
	}
	checkSelectStatus();
});

// other dropdown actions
var $dropdownContainer = $(".category_select .dropdown_container");
var $dropdownList = $(".category_select .dropdown_list");
var $item = $(".category_select .item");
$dropdownList.addClass("hidden");

$dropdownContainer.click(function(){
	var isHidden = $dropdownList.hasClass("hidden");
	if(isHidden){
		$dropdownList.removeClass("hidden");
	}else {
		$dropdownList.addClass("hidden");
	}
});

$dropdownContainer.blur(function(){
	$dropdownList.addClass("hidden");
})

$item.click(function(){
	$dropdownList.addClass("hidden");
	$(".dropdown_container .dropdown_btn_text").html($(this).attr("data-item"));
});

// end dropdown



var $city = $(".city_input");

/**
$city.blur(function(){
	var cityInput = $(this).val();
	if(cityInput != ""){
		isLocation = true;
		selection.location = cityInput;
		alert(selection.category + ", " + selection.bid + ", " + selection.location);
	} else {
		isLocation = false;
		selection.location = "";
		alert(selection.category + ", " + selection.bid + ", " + selection.location);
	}
	checkSelectStatus();
});
**/

$city.keyup(function(){
	var cityInput = $(this).val();
	if(cityInput != ""){
		isLocation = true;
		selection.location = cityInput;
	} else {
		isLocation = false;
		selection.location = "";
	}
	checkSelectStatus();
});



/**
var select_btn_click = function($btn){
	$btn.click(function(){
		var isSelected = $(this).hasClass("selected");
		$btn.removeClass("selected");
		if(!isSelected){
			$(this).addClass("selected");
		}
});

}
*/

var $otherSelections = $(".other_select_dropdown");
$otherSelections.click(function(){
	$(this).addClass("dropdown_show");
});

// next continue button

var $nextBtn = $(".next_btn");
var checkSelectStatus = function(){
	if(isCate && isBid && isLocation){
		$nextBtn.attr("disabled", "false");
		$nextBtn.removeClass("disabled");
	} else {
		$nextBtn.attr("disabled", "disabled");
		$nextBtn.addClass("disabled");
	}
}

$nextBtn.click(function(){
	alert("I'm active");
});



//*** end of actions


// ***** usage sample for editable Slickgrid ***** 
 function requiredFieldValidator(value) {
    if (value == null || value == undefined || !value.length) {
      return {valid: false, msg: "This is a required field"};
    } else {
      return {valid: true, msg: null};
    }
  }

  var grid;
  var columns = [
    {id: "title", name: "货物", field: "title", width: 120, cssClass: "cell-title", resizable: true, 
    	editor: Slick.Editors.Text, validator: requiredFieldValidator},
    {id: "desc", name: "描述", field: "description", width: 100, editor: Slick.Editors.LongText, resizable: true},
    {id: "duration", name: "Duration", field: "duration", editor: Slick.Editors.Text, resizable: true},
    {id: "%", name: "% Complete", field: "percentComplete", width: 150, resizable: true, 
    	formatter: Slick.Formatters.PercentCompleteBar, editor: Slick.Editors.PercentComplete},
    {id: "start", name: "Start", field: "start", minWidth: 60, editor: Slick.Editors.Date, resizable: true },
    {id: "finish", name: "Finish", field: "finish", minWidth: 60, editor: Slick.Editors.Date, resizable: true },
    {id: "effort-driven", name: "Effort Driven", minWidth: 20,  cssClass: "cell-effort-driven", //maxWidth: 80,
    	field: "effortDriven", formatter: Slick.Formatters.Checkmark, editor: Slick.Editors.Checkbox, resizable: true }
  ];
  
  var options = {
    editable: true,
    enableAddRow: true,
    enableCellNavigation: true,
    asyncEditorLoading: false,
    autoEdit: false
  };

  
    var data = [];
    for (var i = 0; i < 5; i++) {
      var d = (data[i] = {});
      d["id"] = "id_" + i;
      d["title"] = "Task " + i;
      d["description"] = "This is a sample task description.\n  It can be multiline";
      d["duration"] = "5 days";
      d["percentComplete"] = Math.round(Math.random() * 100);
      d["start"] = "01/01/2009";
      d["finish"] = "01/05/2009";
      d["effortDriven"] = (i % 5 == 0);
    }    
    
    var dataView = new Slick.Data.DataView({  }); 
    grid = new Slick.Grid(".order-items-grid-area", dataView, columns, options);

    /*
	grid.setSelectionModel(new Slick.CellSelectionModel());
    grid.onAddNewRow.subscribe(function (e, args) {
      var item = args.item;
      grid.invalidateRow(data.length);
      data.push(item);
      grid.updateRowCount();
      grid.render();
    });
   */
  
  	// wire up model events to drive the grid
    dataView.onRowCountChanged.subscribe(function (e, args) {
      grid.updateRowCount();
      grid.render();
    });

    dataView.onRowsChanged.subscribe(function (e, args) {
      grid.invalidateRows(args.rows);
      grid.render();
    });
    
    $('.add-items-btn').click(function(){
    	
    	dataView.beginUpdate();
    	dataView.setItems(data);
    	dataView.endUpdate();
    	
    	// show right data
    	$('.dynamic-select-area').text(" test test ...........");
    });
    

	
  var vendorColumns = [
    {id: "name", name: "货物", field: "name", width: 300, cssClass: "cell-title", resizable: true, 
    	editor: Slick.Editors.Text, validator: requiredFieldValidator},
    {id: "location", name: "地区", field: "location", width: 100, editor: Slick.Editors.Text, resizable: true},
    {id: "desc", name: "主营业务", field: "description", width: 400, editor: Slick.Editors.LongText, resizable: true}
    ];
  
  var vendorOptions = {
    editable: false,
    enableAddRow: true,
    enableCellNavigation: true,
    asyncEditorLoading: false,
    autoEdit: false
  };
  
  var vendorData = [{
  	id: "id_0",
  	name: "上海宝钢",
  	location: "上海",
  	description: "炼钢 卖钢"
  }];
  
	var vendorDataView = new Slick.Data.DataView({  }); 
	var vendorGrid = new Slick.Grid(".order-vendor-list", vendorDataView, vendorColumns, vendorOptions);
	//vendorGrid.setSelectionModel(new Slick.CellSelectionModel());
 	
	vendorDataView.onRowCountChanged.subscribe(function (e, args) {
	  vendorGrid.updateRowCount();
	  vendorGrid.render();
	});
	
	vendorDataView.onRowsChanged.subscribe(function (e, args) {
	  vendorGrid.invalidateRows(args.rows);
	  vendorGrid.render();
	});
	
	$('.add-vendor-btn').click(function(){
		
		vendorDataView.beginUpdate();
		vendorDataView.setItems(vendorData);
		vendorDataView.endUpdate();
	});




/*
$('.addExtProp').bind('click', function(event) {
	
	// get current selected category
	var cate_id = 3;// $("input[type='radio', name='category']").val();
	if (!cate_id) {
	//	cate_id = $("input[type='radio', name='parent_category']").val();
	}

	//alert('category_id=' +cate_id);

	$.ajax({
		url : '/props_by_category', //Note the my_controller and action here, i.e. change accordingly
		type : 'get',
		data : {
			'category_id' : cate_id
		}
	}).done(function(data) {
		//alert(JSON.stringify(data));
		$('.addExtProp').unbind('click').addClass('disabled_link');
	}).fail(function(jqXHR, textStatus) {
		//alert("Request failed: " + textStatus);
	});
});


*/