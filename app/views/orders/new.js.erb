

$(".content_area").html("<%= escape_javascript render(:partial => 'orders/new_2') %>");


  // use jquery datepicker for some date fields
  var dateCtrolsSel = "#order_deadline, .date-input";
  $(dateCtrolsSel).datepicker();
  $(dateCtrolsSel).datepicker('option', 'dateFormat', 'yy-m-dd');
  

var $step1Area = $('.order_onboarding');
// next button status handle
var checkSelectStatus = function(){
	var $nextBtn = $step1Area.find(".next_btn");
	if(isCate && isBid && isLocation){
		console.log('all selected, enable next button!');
		//$nextBtn.attr("disabled", ""); // not work
		$nextBtn.prop("disabled", false);
		$nextBtn.removeClass("disabled");
	} else {
		$nextBtn.prop("disabled", "disabled");
		$nextBtn.addClass("disabled");
	}
};


// ********  select button actions ******** 
// select collection
var selection = {
	category:"",
	bid:"",
	location:""
};

var isCate = false;
var isBid = false;
var isLocation = false;

var $cate_buttons = $step1Area.find(".category_select .select_btn");
$cate_buttons.click(function(){
	var isSelected = $(this).hasClass("selected");
	$cate_buttons.removeClass("selected");
	if(!isSelected){
		$(this).addClass("selected");
		isCate = true;
		selection.category = $(this).attr("data-name");
		console.log(selection.category + ", " + selection.bid + ", " + selection.location);
	} else {
		isCate = false;
		selection.category = "";
	}
	checkSelectStatus();
});


var $bid_buttons = $step1Area.find(".bid_select .select_btn");
$bid_buttons.click(function(){
	var isSelected = $(this).hasClass("selected");
	$bid_buttons.removeClass("selected");
	if(!isSelected){
		$(this).addClass("selected");
		isBid = true;
		selection.bid = $(this).attr("data-name");
	} else {
		isBid = false;
		selection.bid = "";
	}
	checkSelectStatus();
});

// other dropdown actions
var $dropdownContainer = $step1Area.find(".category_select .dropdown_container");
var $dropdownList = $step1Area.find(".category_select .dropdown_list");
var $item = $step1Area.find(".category_select .item");
$dropdownList.addClass("hidden");

$dropdownContainer.click(function(){
	var isHidden = $dropdownList.hasClass("hidden");
	if(isHidden){
		$dropdownList.removeClass("hidden");
	}else {
		$dropdownList.addClass("hidden");
	}
});

$dropdownContainer.focusout(function(){
	$dropdownList.addClass("hidden");
});

$item.click(function(){
	$dropdownList.addClass("hidden");
	$step1Area.find(".dropdown_container .dropdown_btn_text").html($(this).attr("data-item"));
});

// end dropdown



var $city = $step1Area.find(".city_input");
$city.keyup(function(){
	var cityInput = $(this).val();
	if(cityInput != ""){
		isLocation = true;
		selection.location = cityInput;
	} else {
		isLocation = false;
		selection.location = "";
	}
	checkSelectStatus();
});
 
var $otherSelections = $step1Area.find(".other_select_dropdown");
$otherSelections.click(function(){
	$(this).addClass("dropdown_show");
});


// handle steps displays
var $step2Area = $('.create_order_step2');


$step1Area.find('.next_btn').click(function(){
	// use the var selection	 
	var categoryId = $step1Area.find(".category_select .select_btn.selected").attr('data-type-id');
	var city = $step1Area.find('.city_select .city_input').val();
	var bidType = $step1Area.find('.bid_select .selected').attr('data-type-id');   
	console.log('categoryId='+categoryId+', city='+city+', bidType='+bidType);
		
	// load sub category list
	$.ajax({
		url : '/category_list',
		type : 'get',
		dataType: 'html', // response selection list
		data : {
			'category_id' : categoryId
		}
	}).done(function(data) {
		console.log(data);
		$step2Area.find('.item-field-area .category_dropdown_list').html(data);		 
	}).fail(function(jqXHR, textStatus) {
		console.log("Request failed: " + JSON.stringify(textStatus));
	});
	
	
	// load dynamic fields for the level1 category
	$.ajax({
		url : '/props_by_category', //Note the my_controller and action here, i.e. change accordingly
		type : 'get',
		dataType: 'html', // response html snipt
		data : {
			'category_id' : categoryId
		}
	}).done(function(data) {
		 $step2Area.find('.dynamic-select-area .dynamic_properties').html(data);	
		 
	}).fail(function(jqXHR, textStatus) {
		console.log("Request failed: " + JSON.stringify(textStatus));
	});
	
	$step2Area.find('.selected_values .selected_location').text(city);
	$step2Area.find('.selected_values .selected_bidtype').text(bidType == 1 ? '所有供应商' : '指定供应商');
	
});

//****************** end of step1 page actions *******************


// ***** usage sample for editable Slickgrid *****
var gridInfo4OrderItems = {
	columns: [ // default columns 
	  	{id: "name", name: "货物"}, {id: "model", name: "型号"}, {id: "location", name: "产地"},
	  	{id: "quantity", name: "数量"}, {id: "operation", name: "删除"} 
	  ],
	options: {
		editable: true,
	    enableAddRow: true,
	    enableCellNavigation: true,
	    asyncEditorLoading: false,
	    autoEdit: false
	},
	data: [],
	dataView: null	
};


function requiredFieldValidator(value) {
    if (value == null || value == undefined || !value.length) {
      return {valid: false, msg: "This is a required field"};
    } else {
      return {valid: true, msg: null};
    }
}


var itemGridTotalWidth = 770;
 
 
var getColumnDefinition = function(columnData, gridTotalWidth ){
	  var columns =  columnData ? columnData : gridInfo4OrderItems.columns;   
	  var columnCount = columnData ? columnData.length : gridInfo4OrderItems.columns.length ;
	  var colWidth = gridTotalWidth/columnCount;
	  
	  console.log('columnCount='+columnCount+', colWidth='+colWidth);
	  
	  columnDefs = [];
	  columns.forEach(function(col){
	  	columnDefs.push({id: 'col-'+col.id, name: col.name, field: col.id, width: colWidth, cssClass: "TODO-col-header-style", 
	  					resizable: true, editor: Slick.Editors.Text, validator: requiredFieldValidator} );
	  });

	return columnDefs;
};

var addOrderItems = function(columnData){
    var grid;
    var columnDefs = getColumnDefinition(columnData, itemGridTotalWidth);
  
  
  	console.log('columns='+JSON.stringify(columnDefs));
  	var dataView = new Slick.Data.DataView(); 
    grid = new Slick.Grid(".order-items-grid-area", dataView, columnDefs, gridInfo4OrderItems.options);
	console.log('gird created.');
    /*
	grid.setSelectionModel(new Slick.CellSelectionModel());
    grid.onAddNewRow.subscribe(function (e, args) {
      var item = args.item;
      grid.invalidateRow(data.length);
      data.push(item);
      grid.updateRowCount();
      grid.render();
    });
   */

    dataView.onRowCountChanged.subscribe(function (e, args) {
      grid.updateRowCount();
      grid.render();
    });

    dataView.onRowsChanged.subscribe(function (e, args) {
      grid.invalidateRows(args.rows);
      grid.render();
    });
    
    
    var data = gridInfo4OrderItems.data;
    for (var i = 0; i < 3; i++) {
      data.push( {
      	"id": "col-"+i,
      	"name": "钢管 " + i,
      	"model" : "test",
      	"location" : "日本",
      	"quantity": "1000",
      	"operation": ' delete '
      });      
    }    
   	console.log('gridInfo4OrderItems.data='+JSON.stringify(data));
    	
    dataView.setItems(data);
    
    console.log('find add items button='+$step2Area.find('.add-items-btn').length);
    $step2Area.find('.add-items-btn').click(function(){
    	console.log(JSON.stringify( gridInfo4OrderItems.data ));    	
    	// var itemCount = dataView.getLength();
    	// dataView.beginUpdate();
    	// var newData = {id: 'id_'+itemCount,  name: "钢材", model:'yuan港', 'texture': '304', 
    			// spec: 88, location: '南京', amount: "10", operation: (i % 5 == 0)};
    	// if(itemCount<=0){
    		// dataView.setItems(newData);
    	// }else{
    		// dataView.addItem(newData);
    	// }     	    	
    	// dataView.endUpdate();
    	
    	// show right data
    	$step2Area.find('.dynamic-select-area').show();
    });
    
    gridInfo4OrderItems.dataView = dataView;
    
    $step2Area.find('.add-one-item-btn').click(function(){
		// gather filled data 
		var $fieldArea = $step2Area.find('.item-field-area');
		var name = $fieldArea.find('.input.name').val();
		var model = $fieldArea.find('.input.model').val();
		var texture = $fieldArea.find('.input.texture').val();
		var madein = $fieldArea.find('.input.madein').val();
		var quantity = $fieldArea.find('.input.quantity').val();
		
		console.log('name='+name+', model='+model+', madein='+madein+', quantity='+quantity);
		var newColumn = {id: 'texture', name: '材质'};
		var newHeaders = [];
		
		var cols = newHeaders.concat(gridInfo4OrderItems.columns);
		cols.splice(3, 0, newColumn);
		console.log("new cols="+JSON.stringify(cols));
		
		var columnDefs = getColumnDefinition(cols, itemGridTotalWidth);
		  
		grid.setColumns(columnDefs);
		dataView.setItems([{'id': 0, 'name': name, 'model':model,  'texture': texture, 'location':madein,'quantity':quantity}]);
	});
  
    return grid;
};


 addOrderItems(); 



var addVendors = function(){
	var vendorColumns = [
    {id: "name", name: "供应商", field: "name", width: 300, cssClass: "cell-title", resizable: true, 
    	editor: Slick.Editors.Text, validator: requiredFieldValidator},
    {id: "location", name: "地区", field: "location", width: 170, editor: Slick.Editors.Text, resizable: true},
    {id: "desc", name: "主营业务", field: "description", width: 300, editor: Slick.Editors.Text, resizable: true}
    ];
  
  var vendorOptions = {
    editable: false,
    enableAddRow: true,
    enableCellNavigation: true,
    asyncEditorLoading: false,
    autoEdit: false
  };
  
  var vendorData = [{
  	id: "id_0",
  	name: "上海宝钢",
  	location: "上海",
  	description: "炼钢 卖钢"
  }];
  
	var vendorDataView = new Slick.Data.DataView({  }); 
	var vendorGrid = new Slick.Grid(".order-vendor-list", vendorDataView, vendorColumns, vendorOptions);
	/*vendorGrid.setSelectionModel(new Slick.CellSelectionModel());*/
 	
	vendorDataView.onRowCountChanged.subscribe(function (e, args) {
	  vendorGrid.updateRowCount();
	  vendorGrid.render();
	});
	
	vendorDataView.onRowsChanged.subscribe(function (e, args) {
	  vendorGrid.invalidateRows(args.rows);
	  vendorGrid.render();
	});
	
	$('.add-vendor-btn').click(function(){
		console.log(JSON.stringify( vendorDataView ));
		console.log(JSON.stringify( vendorData ));
		
		vendorDataView.beginUpdate();
		vendorDataView.addItem(vendorData[0]);
		vendorDataView.endUpdate();
	});
};
  



addVendors();


var fixedFields = ['category', 'name', 'model', 'quantity', 'madein', "memo"];
$('#new_order_item_category_id').bind('change', function(){
	// get dynamic ones for the selected category
	var categoryId = $(this).val();
	console.log(categoryId);
	
	
});











/*
$('.addExtProp').bind('click', function(event) {	
	// get current selected category
	var cate_id = 3;// $("input[type='radio', name='category']").val();
	if (!cate_id) {
	//	cate_id = $("input[type='radio', name='parent_category']").val();
	}

	console.log('category_id=' +cate_id);

	$.ajax({
		url : '/props_by_category', //Note the my_controller and action here, i.e. change accordingly
		type : 'get',
		data : {
			'category_id' : cate_id
		}
	}).done(function(data) {
		console.log(JSON.stringify(data));
		
		$('.addExtProp').unbind('click').addClass('disabled_link');
	}).fail(function(jqXHR, textStatus) {
		console.log("Request failed: " + JSON.stringify(textStatus));
	});
});


*/